import React from 'react';
import { Link } from 'react-router-dom';
import { useSelector } from 'react-redux';
import axios from 'axios';

import './index.scss';

const Header = () => {
  const auth = useSelector((state) => state.auth);

  const { user, isLogged } = auth;

  const handleLogout = async () => {
    try {
      await axios.get('/user/logout');
      localStorage.removeItem('firstLogin');
      window.location.href = '/';
    } catch (err) {
      window.location.href = '/';
    }
  };

  const userLink = () => {
    return (
      <li className="drop-nav">
        <Link to="#" className="avatar">
          <img src={user.avatar} alt="" /> {user.name}{' '}
          <i className="fas fa-angle-down"></i>
        </Link>
        <ul className="dropdown">
          <li>
            <Link to="/profile">Профиль</Link>
          </li>
          <li>
            <Link to="/tasks">Задачи</Link>
          </li>
          {user.readDB === 1 || user.role === 1 ? (
            <li>
              <Link to="/data_base">База данных</Link>
            </li>
          ) : null}

          <li>
            <Link to="/" onClick={handleLogout}>
              Выйти
            </Link>
          </li>
        </ul>
      </li>
    );
  };

  const transForm = {
    transform: isLogged ? 'translateY(-5px)' : 0,
  };

  return (
    <header>
      <div className="container">
        <div className="logo">
          <h1>
            <svg
              width="60"
              height="60"
              viewBox="0 0 85 85"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M69.9479 14.1667C72.0613 14.1667 74.0882 15.0063 75.5827 16.5007C77.0771 17.9951 77.9167 20.022 77.9167 22.1354V62.8823C77.9167 64.9958 77.0771 67.0226 75.5827 68.5171C74.0882 70.0115 72.0613 70.8511 69.9479 70.8511H15.0521C14.0056 70.8511 12.9694 70.6449 12.0026 70.2445C11.0357 69.844 10.1573 69.257 9.41731 68.5171C8.67734 67.7771 8.09037 66.8986 7.6899 65.9318C7.28943 64.965 7.08331 63.9288 7.08331 62.8823V22.1354C7.08331 20.022 7.92288 17.9951 9.41731 16.5007C10.9117 15.0063 12.9386 14.1667 15.0521 14.1667H69.9479ZM69.9479 19.4792H15.0521C14.3476 19.4792 13.672 19.759 13.1738 20.2572C12.6757 20.7553 12.3958 21.431 12.3958 22.1354V62.8823C12.3958 64.3486 13.5858 65.5386 15.0521 65.5386H69.9479C70.6524 65.5386 71.328 65.2587 71.8262 64.7606C72.3243 64.2624 72.6042 63.5868 72.6042 62.8823V22.1354C72.6042 21.431 72.3243 20.7553 71.8262 20.2572C71.328 19.759 70.6524 19.4792 69.9479 19.4792ZM34.5312 44.2709C35.2357 44.2709 35.9113 44.5507 36.4095 45.0489C36.9076 45.547 37.1875 46.2226 37.1875 46.9271V48.6731L37.1591 49.0556C36.5819 52.9975 33.2846 54.8994 28.3333 54.8994C23.3821 54.8994 20.0812 52.9975 19.5075 49.0556L19.4791 48.6661V46.9271C19.4791 46.2226 19.759 45.547 20.2571 45.0489C20.7553 44.5507 21.4309 44.2709 22.1354 44.2709H34.5312ZM46.9342 46.0275H62.8646C63.5376 46.0277 64.1854 46.2834 64.6772 46.7428C65.1689 47.2023 65.468 47.8313 65.5138 48.5027C65.5597 49.1742 65.349 49.838 64.9243 50.36C64.4996 50.8821 63.8925 51.2235 63.2258 51.3152L62.8646 51.34H46.9342C46.2612 51.3398 45.6133 51.0842 45.1216 50.6247C44.6298 50.1652 44.3308 49.5363 44.2849 48.8648C44.239 48.1934 44.4497 47.5296 44.8744 47.0075C45.2991 46.4854 45.9062 46.144 46.5729 46.0523L46.9342 46.0275H62.8646H46.9342ZM28.3333 30.1113C29.7423 30.1113 31.0935 30.671 32.0898 31.6673C33.0861 32.6636 33.6458 34.0148 33.6458 35.4238C33.6458 36.8327 33.0861 38.184 32.0898 39.1803C31.0935 40.1766 29.7423 40.7363 28.3333 40.7363C26.9244 40.7363 25.5731 40.1766 24.5768 39.1803C23.5805 38.184 23.0208 36.8327 23.0208 35.4238C23.0208 34.0148 23.5805 32.6636 24.5768 31.6673C25.5731 30.671 26.9244 30.1113 28.3333 30.1113ZM46.9342 33.6459H62.8646C63.5376 33.6461 64.1854 33.9017 64.6772 34.3612C65.1689 34.8206 65.468 35.4496 65.5138 36.1211C65.5597 36.7925 65.349 37.4563 64.9243 37.9784C64.4996 38.5004 63.8925 38.8418 63.2258 38.9336L62.8646 38.9584H46.9342C46.2612 38.9581 45.6133 38.7025 45.1216 38.243C44.6298 37.7836 44.3308 37.1546 44.2849 36.4832C44.239 35.8117 44.4497 35.1479 44.8744 34.6258C45.2991 34.1038 45.9062 33.7624 46.5729 33.6706L46.9342 33.6459H62.8646H46.9342Z"
                fill="white"
              />
            </svg>

            <Link to="/">{user.name}</Link>
          </h1>
        </div>

        <ul style={transForm}>
          <li>
            <Link to="/">
              <i className="fas fa-home"></i> Домашная страница
            </Link>
          </li>
          <li>
            <Link to="/tracking">
              <i className="fas fa-home"></i> Отслеживание
            </Link>
          </li>
          {user.role === 1 && (
            <li>
              <Link to="/admin_menu">
                <i className="fas fa-home"></i> Админ меню
              </Link>
            </li>
          )}

          <li>
            <Link to="/user_manual">
              <i class="far fa-file-alt"></i> Руководство пользователя
            </Link>
          </li>
          {isLogged ? (
            userLink()
          ) : (
            <li>
              <Link to="/login">
                <i className="fas fa-user"></i> Войти
              </Link>
            </li>
          )}
        </ul>
      </div>
    </header>
  );
};

export default Header;
